# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from message_server.models.base_model_ import Model
from message_server import util


class Message(Model):
    """NOTE: This class is auto generated by the swagger code generator program

    Do not edit the class manually.
    """

    def __init__(self, id: int = None, sender_mail: str = None,
                 receiver_mail: str = None, message: str = None,
                 time: str = None, image: str = None,
                 image_hash: str = None):  # noqa: E501
        """Message - a model defined in Swagger

        :param id: The id of this Message.  # noqa: E501
        :type id: int
        :param sender_mail: The sender_mail of this Message.  # noqa: E501
        :type sender_mail: str
        :param receiver_mail: The receiver_mail of this Message.  # noqa: E501
        :type receiver_mail: str
        :param message: The message of this Message.  # noqa: E501
        :type message: str
        :param time: The time of this Message.  # noqa: E501
        :type time: str
        :param image: The image of this Message.  # noqa: E501
        :type image: str
        :param image_hash: The base64 encoding of the image file
        :type image_hash: str
        """
        self.swagger_types = {
            'id': int,
            'sender_mail': str,
            'receiver_mail': str,
            'message': str,
            'time': str,
            'image': str,
            'image_hash': str
        }

        self.attribute_map = {
            'id': 'id',
            'sender_mail': 'sender_mail',
            'receiver_mail': 'receiver_mail',
            'message': 'message',
            'time': 'time',
            'image': 'image',
            'image_hash': 'image_hash'
        }

        self._id = id
        self._sender_mail = sender_mail
        self._receiver_mail = receiver_mail
        self._message = message
        self._time = time
        self._image = image
        self._image_hash = image_hash

    @classmethod
    def from_dict(cls, dikt) -> 'Message':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Message of this Message.  # noqa: E501
        :rtype: Message
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Message.


        :return: The id of this Message.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Message.


        :param id: The id of this Message.
        :type id: int
        """

        self._id = id

    @property
    def sender_mail(self) -> str:
        """Gets the sender_mail of this Message.


        :return: The sender_mail of this Message.
        :rtype: str
        """
        return self._sender_mail

    @sender_mail.setter
    def sender_mail(self, sender_mail: str):
        """Sets the sender_mail of this Message.


        :param sender_mail: The sender_mail of this Message.
        :type sender_mail: str
        """

        self._sender_mail = sender_mail

    @property
    def receiver_mail(self) -> str:
        """Gets the receiver_mail of this Message.


        :return: The receiver_mail of this Message.
        :rtype: str
        """
        return self._receiver_mail

    @receiver_mail.setter
    def receiver_mail(self, receiver_mail: str):
        """Sets the receiver_mail of this Message.


        :param receiver_mail: The receiver_mail of this Message.
        :type receiver_mail: str
        """

        self._receiver_mail = receiver_mail

    @property
    def message(self) -> str:
        """Gets the message of this Message.


        :return: The message of this Message.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message: str):
        """Sets the message of this Message.


        :param message: The message of this Message.
        :type message: str
        """
        if message is None:
            raise ValueError("Invalid value for `message`, must not be `None`")  # noqa: E501

        self._message = message

    @property
    def time(self) -> str:
        """Gets the time of this Message.


        :return: The time of this Message.
        :rtype: str
        """
        return self._time

    @time.setter
    def time(self, time: str):
        """Sets the time of this Message.


        :param time: The time of this Message.
        :type time: str
        """
        if time is None:
            raise ValueError("Invalid value for `time`, must not be `None`")  # noqa: E501

        self._time = time

    @property
    def image(self) -> str:
        """Gets the image of this Message.


        :return: The image of this Message.
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image: str):
        """Sets the image of this Message.


        :param image: The image of this Message.
        :type image: str
        """

        self._image = image

    @property
    def image_hash(self) -> str:
        """Gets the image_hash of this Message.


        :return: The image_hash of this Message.
        :rtype: str
        """
        return self._image_hash

    @image_hash.setter
    def image_hash(self, image_hash: str):
        """Sets the image_hash of this Message.


        :param image_hash: The image_hash of this Message.
        :type image_hash: str
        """

        self._image_hash = image_hash
